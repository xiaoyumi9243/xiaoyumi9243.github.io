<!DOCTYPE html>
<html lang="zh-CN">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>xiaoyumi音乐</title>
    <link rel="icon" href="https://img0.baidu.com/it/u=2161498278,4294936884&fm=253&fmt=auto&app=138&f=JPEG?w=708&h=500/" type="image/x-icon">
    
    <style>
        /* 基础样式 - 与现有主题一致 */
        @font-face {
            font-family: 'Minecraft';
            src: url('https://fonts.cdnfonts.com/css/minecraft-4') format('woff2');
        }
        
        body {
            margin: 0;
            padding: 0;
            font-family: 'Minecraft', Arial, sans-serif;
            background-color: #1a1a1a;
            color: #e0e0e0;
            background-image: url('https://www.minecraft.net/content/dam/minecraft/touchup-2020/minecraft-background-behavior-1800x1012.jpg');
            background-size: cover;
            background-attachment: fixed;
        }
        
        /* 导航栏样式 - 与现有一致 */
        .navbar {
            background-color: rgba(59, 59, 59, 0.8);
            border-bottom: 4px solid #6a6a6a;
            padding: 15px 20px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            position: fixed;
            width: 100%;
            top: 0;
            z-index: 1000;
            backdrop-filter: blur(16px) saturate(180%);
            -webkit-backdrop-filter: blur(16px) saturate(180%);
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.3);
            transition: all 0.3s ease;
        }
        
        .navbar.scrolled {
            background-color: rgba(40, 40, 40, 0.9);
            border-bottom-width: 3px;
            padding: 10px 20px;
        }
        
        .logo {
            font-size: 24px;
            color: #72cb3b;
            text-shadow: 2px 2px 0 #4d7a29;
            transition: all 0.3s;
        }
        
        /* 主内容区域 */
        .main-content {
            margin-top: 80px;
            padding: 20px;
        }
        
        /* 音乐库标题 */
        .music-library-title {
            color: #72cb3b;
            text-shadow: 2px 2px 0 #4d7a29;
            font-size: 2rem;
            margin-bottom: 20px;
            border-bottom: 3px solid #4d7a29;
            padding-bottom: 10px;
        }
        
        /* 音乐卡片网格布局 */
        .music-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
            gap: 20px;
            margin-top: 20px;
        }
        
        /* 音乐卡片样式 */
        .music-card {
            background-color: rgba(59, 59, 59, 0.8);
            border: 3px solid #6a6a6a;
            border-radius: 8px;
            padding: 15px;
            transition: all 0.3s ease;
            cursor: pointer;
            backdrop-filter: blur(10px);
            -webkit-backdrop-filter: blur(10px);
        }
        
        .music-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.3);
            border-color: #72cb3b;
        }
        
        .music-cover {
            width: 100%;
            height: 200px;
            object-fit: cover;
            border-radius: 5px;
            border: 2px solid #4d7a29;
            margin-bottom: 10px;
        }
        
        .music-title {
            color: #72cb3b;
            font-size: 1.2rem;
            margin-bottom: 5px;
        }
        
        .music-artist {
            color: #e0e0e0;
            font-size: 0.9rem;
            margin-bottom: 10px;
        }
        
        .music-duration {
            color: #a0a0a0;
            font-size: 0.8rem;
        }
        
        /* 弹窗样式 */
        .modal-overlay {
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background-color: rgba(0, 0, 0, 0.7);
            display: none;
            justify-content: center;
            align-items: center;
            z-index: 2000;
        }
        
        .modal-content {
            background-color: rgba(59, 59, 59, 0.9);
            border: 4px solid #6a6a6a;
            padding: 25px;
            max-width: 500px;
            width: 90%;
            position: relative;
            backdrop-filter: blur(10px) saturate(160%);
            -webkit-backdrop-filter: blur(10px) saturate(160%);
            border-radius: 8px;
        }
        
        .modal-title {
            color: #72cb3b;
            margin-top: 0;
            border-bottom: 3px solid #4d7a29;
            padding-bottom: 10px;
        }
        
        .close-modal {
            position: absolute;
            top: 10px;
            right: 10px;
            background-color: #3b3b3b;
            border: 2px solid #6a6a6a;
            color: white;
            width: 30px;
            height: 30px;
            font-size: 18px;
            cursor: pointer;
            display: flex;
            justify-content: center;
        align-items: center;
            border-radius: 50%;
        }
        
        .close-modal:hover {
            background-color: #6a6a6a;
        }
        
        /* 播放器控件 */
        .player-controls {
            display: flex;
            flex-direction: column;
            align-items: center;
            margin-top: 20px;
        }
        
        .player-cover {
            width: 200px;
            height: 200px;
            object-fit: cover;
            border-radius: 10px;
            border: 3px solid #4d7a29;
            margin-bottom: 20px;
        }
        
        .player-info {
            text-align: center;
            margin-bottom: 20px;
        }
        
        .player-title {
            color: #72cb3b;
            font-size: 1.5rem;
            margin-bottom: 5px;
        }
        
        .player-artist {
            color: #e0e0e0;
            font-size: 1rem;
        }
        
        .progress-container {
            width: 100%;
            margin-bottom: 20px;
        }
        
        .progress-bar {
            width: 100%;
            height: 6px;
            background-color: #4d7a29;
            border-radius: 3px;
            margin-bottom: 5px;
            cursor: pointer;
        }
        
        .progress {
            height: 100%;
            background-color: #72cb3b;
            border-radius: 3px;
            width: 0%;
        }
        
        .time-info {
            display: flex;
            justify-content: space-between;
            color: #a0a0a0;
            font-size: 0.8rem;
        }
        
        .control-buttons {
            display: flex;
            justify-content: center;
            gap: 20px;
            margin-top: 15px;
        }
        
        .control-button {
            background-color: #72cb3b;
            border: 2px solid #4d7a29;
            color: white;
            width: 40px;
            height: 40px;
            border-radius: 50%;
            display: flex;
            justify-content: center;
            align-items: center;
            cursor: pointer;
            transition: all 0.3s;
        }
        
        .control-button:hover {
            background-color: #8ae63e;
            transform: scale(1.1);
        }
        
        .play-button {
            width: 50px;
            height: 50px;
            font-size: 1.5rem;
        }
        
        /* 主题变量 */
        :root {
            --bg-color: #1a1a1a;
            --text-color: #e0e0e0;
            --card-bg: #3b3b3b;
            --accent-color: #72cb3b;
            --border-color: #6a6a6a;
            --footer-bg: #1a1a1a;
            --modal-text: #ffffff;
            --input-bg: rgba(255, 255, 255, 0.1);
            --input-text: #ffffff;
        }
        
        [data-theme="light"] {
            --bg-color: #f0f0f0;
            --text-color: #333;
            --card-bg: #ffffff;
            --border-color: #4d7a29;
            --footer-bg: #e0e0e0;
            --modal-text: #333333;
            --input-bg: rgba(0, 0, 0, 0.05);
            --input-text: #333333;
        }
        
        /* 应用主题变量 */
        body {
            background-color: var(--bg-color);
            color: var(--text-color);
        }
        
        .music-card {
            background-color: var(--card-bg);
            border-color: var(--border-color);
        }
        
        .modal-content {
            background-color: var(--card-bg);
            border-color: var(--border-color);
            color: var(--modal-text);
        }
        
        /* 页脚样式 */
        footer {
            background-color: var(--footer-bg);
            padding: 20px;
            text-align: center;
            border-top: 4px solid var(--border-color);
            margin-top: 40px;
        }
        /* 主题切换按钮 */
        .theme-toggle {
            background-color: var(--accent-color);
            border: 2px solid #4d7a29;
            color: white;
            padding: 8px 15px;
            margin: 15px 0;
            cursor: pointer;
            font-family: 'Minecraft', sans-serif;
            border-radius: 4px;
            transition: all 0.3s;
        }
        
        .theme-toggle:hover {
            transform: translateY(-2px);
            box-shadow: 0 2px 6px rgba(0,0,0,0.2);
        }
        
        /* 滚动锁定样式 */
        body.modal-open,
        html.modal-open {
            overflow: hidden !important;
            position: fixed !important;
            width: 100% !important;
            height: 100% !important;
            top: 0 !important;
            left: 0 !important;
            margin: 0 !important;
            padding: 0 !important;
            overscroll-behavior: none !important;
        }
    /* 菜单按钮样式 */
        .menu-button {
            background-color: rgba(114, 203, 59, 0.9);
            border: 3px solid #4d7a29;
            color: white;
            font-family: 'Minecraft', sans-serif;
            padding: 8px 15px;
            text-transform: uppercase;
            font-size: 1rem;
            cursor: pointer;
            transition: all 0.3s;
            backdrop-filter: blur(5px);
            -webkit-backdrop-filter: blur(5px);
        }
        
        .menu-button:hover {
            background-color: rgba(138, 230, 62, 0.9);
            transform: translateY(-1px);
        }
        
        /* ===== 更新导航栏样式 - 与index.htm一致 ===== */
.navbar {
    background-color: rgba(59, 59, 59, 0.8); /* 半透明背景 */
    border-bottom: 4px solid #6a6a6a;
    padding: 15px 20px;
    display: flex;
    justify-content: space-between;
    align-items: center;
    position: fixed;
    width: 100%;
    top: 0;
    z-index: 1000;
    
    /* 云母效果关键属性 */
    backdrop-filter: blur(16px) saturate(180%);
    -webkit-backdrop-filter: blur(16px) saturate(180%);
    
    /* 边框效果增强 */
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.3);
    
    /* 动画过渡 */
    transition: all 0.3s ease;
}

/* 滚动时导航栏效果 */
.navbar.scrolled {
    background-color: rgba(40, 40, 40, 0.9);
    border-bottom-width: 3px;
    padding: 10px 20px;
}

.logo {
    font-size: 24px;
    color: #72cb3b;
    text-shadow: 2px 2px 0 #4d7a29;
    transition: all 0.3s;
}

.navbar.scrolled .logo {
    font-size: 22px;
}

/* 菜单按钮样式 */
.menu-button {
    background-color: rgba(114, 203, 59, 0.9);
    border: 3px solid #4d7a29;
    color: white;
    font-family: 'Minecraft', sans-serif;
    padding: 8px 15px;
    text-transform: uppercase;
    font-size: 1rem;
    cursor: pointer;
    transition: all 0.3s;
    backdrop-filter: blur(5px);
    -webkit-backdrop-filter: blur(5px);
}

.menu-button:hover {
    background-color: rgba(138, 230, 62, 0.9);
    transform: translateY(-1px);
}

/* 导航链接容器 - 初始隐藏 */
.nav-container {
    position: fixed;
    top: 70px;
    right: 20px;
    background-color: rgba(59, 59, 59, 0.9);
    border: 4px solid #6a6a6a;
    padding: 15px;
    display: none;
    flex-direction: column;
    z-index: 999;
    width: 200px;
    
    /* 云母效果 */
    backdrop-filter: blur(16px) saturate(180%);
    -webkit-backdrop-filter: blur(16px) saturate(180%);
    
    /* 动画效果 */
    transition: all 0.3s ease;
    opacity: 0;
    transform: translateY(-10px);
}

/* 显示导航链接的类 */
.nav-container.show {
    display: flex;
    opacity: 1;
    transform: translateY(0);
}

/* 导航链接列表 */
.nav-links {
    list-style: none;
    padding: 0;
    margin: 0;
    width: 100%;
    display: flex;
    flex-direction: column; /* 垂直排列 */
}

/* 每个菜单项 */
.nav-links li {
    width: 100%;
    margin: 5px 0; /* 调整间距 */
}

/* 链接样式 */
.nav-links a {
    color: white;
    text-decoration: none;
    padding: 12px 16px;
    display: block;
    width: 100%;
    border: 2px solid transparent;
    transition: all 0.2s;
}

.nav-links a:hover {
    border: 2px solid #72cb3b;
    background-color: rgba(77, 122, 41, 0.7);
    transform: translateX(8px);
}
    </style>
</head>
<body>
<nav class="navbar">
    <div class="logo">xiaoyumi</div>
    <button class="menu-button" id="menuToggle">菜单</button>
    <div class="nav-container" id="navContainer">
        <ul class="nav-links">
            <li><a href="https://xiaoyumi9243.github.io/buy.htm">购买</a></li>
            <li><a href="https://xiaoyumi.com/buy/people">收购人群</a></li>
            <li><a href="https://xiaoyumi9243.github.io/games.htm">游戏</a></li>
            <li><a href="https://xiaoyumi9243.github.io/login.htm">登录</a></li>
            <li><a href="https://xiaoyumi9243.github.io/music.htm">音乐</a></li>
        </ul>
    </div>
</nav>
    
    <!-- 主内容区域 -->
    <div class="main-content">
        <h1 class="music-library-title">音乐库</h1>
        
        <div class="music-grid">
            <!-- 歌曲1 -->
            <div class="music-card" data-song="1">
                <img src="https://img2.baidu.com/it/u=2561572747,3020051521&fm=253&fmt=auto&app=138&f=JPEG?w=500&h=500" alt="歌曲封面" class="music-cover">
                <h3 class="music-title">老年音乐</h3>
                <p class="music-artist">快速把你耳朵搞聋</p>
                <p class="music-duration">0:15</p>
            </div>
            
            <!-- 歌曲2 -->
            <div class="music-card" data-song="2">
                <img src="https://img2.baidu.com/it/u=2561572747,3020051521&fm=253&fmt=auto&app=138&f=JPEG?w=500&h=500" alt="歌曲封面" class="music-cover">
                <h3 class="music-title">快乐音乐</h3>
                <p class="music-artist">听一听看你快不快乐</p>
                <p class="music-duration">0:15</p>
            </div>
            
            <!-- 歌曲3 -->
            <div class="music-card" data-song="3">
                <img src="https://img2.baidu.com/it/u=2561572747,3020051521&fm=253&fmt=auto&app=138&f=JPEG?w=500&h=500" alt="歌曲封面" class="music-cover">
                <h3 class="music-title">推荐音乐</h3>
                <p class="music-artist"></p>
                <p class="music-duration">0:13</p>
            </div>
            </div>
        </div>
    </div>
    
    <!-- 歌曲1弹窗 -->
    <div class="modal-overlay" id="songModal1">
        <div class="modal-content">
            <button class="close-modal" id="closeModal1">&times;</button>
            <h2 class="modal-title">老年音乐</h2>
            <div class="player-controls">
                <img src="https://img2.baidu.com/it/u=2561572747,3020051521&fm=253&fmt=auto&app=138&f=JPEG?w=500&h=500" alt="歌曲封面" class="player-cover">
                <div class="player-info">
                    <h3 class="player-title"></h3>
                    <p class="player-artist">快速把你耳朵搞聋</p>
                </div>
                
                <div class="progress-container">
                    <div class="progress-bar">
                        <div class="progress" id="progress1"></div>
                    </div>
                    <div class="time-info">
                        <span id="currentTime1">0:00</span>
                        <span id="duration1">0:15</span>
                    </div>
                </div>
                
                <div class="control-buttons">
                    <button class="control-button" id="prevButton1">
                        <i class="fas fa-backward"></i>
                    </button>
                    <button class="control-button play-button" id="playButton1">
                        <i class="fas fa-play"></i>
                    </button>
                    <button class="control-button" id="nextButton1">
                        <i class="fas fa-forward"></i>
                    </button>
                </div>
                
                <audio id="audioPlayer1" src="https://xiaoyumi9243.github.io/music.ogg"></audio>
            </div>
        </div>
    </div>
    
    <!-- 歌曲2弹窗 -->
    <div class="modal-overlay" id="songModal2">
        <div class="modal-content">
            <button class="close-modal" id="closeModal2">&times;</button>
            <h2 class="modal-title">正在播放</h2>
            <div class="player-controls">
                <img src="https://img2.baidu.com/it/u=2561572747,3020051521&fm=253&fmt=auto&app=138&f=JPEG?w=500&h=500" alt="歌曲封面" class="player-cover">
                <div class="player-info">
                    <h3 class="player-title">快乐音乐</h3>
                    <p class="player-artist">听一听看你快不快乐</p>
                </div>
                
                <div class="progress-container">
                    <div class="progress-bar">
                        <div class="progress" id="progress2"></div>
                    </div>
                    <div class="time-info">
                        <span id="currentTime2">0:00</span>
                        <span id="duration2">0:15</span>
                    </div>
                </div>
                
                <div class="control-buttons">
                    <button class="control-button" id="prevButton2">
                        <i class="fas fa-backward"></i>
                    </button>
                    <button class="control-button play-button" id="playButton2">
                        <i class="fas fa-play"></i>
                    </button>
                    <button class="control-button" id="nextButton2">
                        <i class="fas fa-forward"></i>
                    </button>
                </div>
                
                <audio id="audioPlayer2" src="https://xiaoyumi9243.github.io/music1.ogg"></audio>
            </div>
        </div>
    </div>
    
    <!-- 歌曲3弹窗 -->
    <div class="modal-overlay" id="songModal3">
        <div class="modal-content">
            <button class="close-modal" id="closeModal3">&times;</button>
            <h2 class="modal-title">正在播放</h2>
            <div class="player-controls">
                <img src="https://img2.baidu.com/it/u=2561572747,3020051521&fm=253&fmt=auto&app=138&f=JPEG?w=500&h=500" alt="歌曲封面" class="player-cover">
                <div class="player-info">
                    <h3 class="player-title">推荐音乐</h3>
                    <p class="player-artist">快来听一听超级经典</p>
                </div>
                
                <div class="progress-container">
                    <div class="progress-bar">
                        <div class="progress" id="progress3"></div>
                    </div>
                    <div class="time-info">
                        <span id="currentTime3">0:00</span>
                        <span id="duration3">0:13</span>
                    </div>
                </div>
                
                <div class="control-buttons">
                    <button class="control-button" id="prevButton3">
                        <i class="fas fa-backward"></i>
                    </button>
                    <button class="control-button play-button" id="playButton3">
                        <i class="fas fa-play"></i>
                    </button>
                    <button class="control-button" id="nextButton3">
                        <i class="fas fa-forward"></i>
                    </button>
                </div>
                
                <audio id="audioPlayer3" src="https://xiaoyumi9243.github.io/music2.ogg"></audio>
            </div>
        </div>
    </div>
    
    <!-- 页脚 -->
    <footer>
        <button class="theme-toggle" id="themeToggle">🌓 切换主题</button>
        <div class="social-links">
            <a href="https://xiaoyumi9243.github.io/bug.htm">Bug反馈</a>
        </div>
        <p>此网站为xiaoyumi私人网站</p>
        <p>此网站仅为演示用途</p>
    </footer>
    
    <!-- Font Awesome图标库 -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    
   <script>
    // 音乐播放器功能
    document.querySelectorAll('.music-card').forEach(card => {
        card.addEventListener('click', function() {
            const songNumber = this.getAttribute('data-song');
            const modal = document.getElementById(`songModal${songNumber}`);
            modal.style.display = 'flex';
            document.body.classList.add('modal-open');
            document.documentElement.classList.add('modal-open');
        });
    });
    
    // 关闭弹窗功能
    document.querySelectorAll('.close-modal').forEach(button => {
        button.addEventListener('click', function() {
            const modal = this.closest('.modal-overlay');
            modal.style.display = 'none';
            document.body.classList.remove('modal-open');
            document.documentElement.classList.remove('modal-open');
            
            // 暂停所有音频
            document.querySelectorAll('audio').forEach(audio => {
                audio.pause();
            });
            
            // 重置所有播放按钮
            document.querySelectorAll('.play-button').forEach(btn => {
                btn.innerHTML = '<i class="fas fa-play"></i>';
            });
        });
    });
    
    // 点击弹窗外部关闭
    document.querySelectorAll('.modal-overlay').forEach(modal => {
        modal.addEventListener('click', function(e) {
            if (e.target === this) {
                this.style.display = 'none';
                document.body.classList.remove('modal-open');
                document.documentElement.classList.remove('modal-open');
                
                // 暂停所有音频
                document.querySelectorAll('audio').forEach(audio => {
                    audio.pause();
                });
                
                // 重置所有播放按钮
                document.querySelectorAll('.play-button').forEach(btn => {
                    btn.innerHTML = '<i class="fas fa-play"></i>';
                });
            }
        });
    });
    
    // 为每个播放器设置独立的控制逻辑
    function setupPlayer(playerNumber) {
        const audioPlayer = document.getElementById(`audioPlayer${playerNumber}`);
        const playButton = document.getElementById(`playButton${playerNumber}`);
        const prevButton = document.getElementById(`prevButton${playerNumber}`);
        const nextButton = document.getElementById(`nextButton${playerNumber}`);
        const progressBar = document.getElementById(`progress${playerNumber}`);
        const currentTimeElement = document.getElementById(`currentTime${playerNumber}`);
        const durationElement = document.getElementById(`duration${playerNumber}`);
        
        let isPlaying = false;
        
        // 播放/暂停功能
        playButton.addEventListener('click', function() {
            if (isPlaying) {
                audioPlayer.pause();
                playButton.innerHTML = '<i class="fas fa-play"></i>';
            } else {
                audioPlayer.play();
                playButton.innerHTML = '<i class="fas fa-pause"></i>';
            }
            isPlaying = !isPlaying;
        });
        
        // 更新进度条
        audioPlayer.addEventListener('timeupdate', function() {
            const currentTime = audioPlayer.currentTime;
            const duration = audioPlayer.duration;
            const progressPercent = (currentTime / duration) * 100;
            progressBar.style.width = `${progressPercent}%`;
            
            // 更新时间显示
            currentTimeElement.textContent = formatTime(currentTime);
        });
        
        // 点击进度条跳转
        progressBar.parentElement.addEventListener('click', function(e) {
            const width = this.clientWidth;
            const clickX = e.offsetX;
            const duration = audioPlayer.duration;
            audioPlayer.currentTime = (clickX / width) * duration;
        });
        
        // 音频加载完成后更新总时长
        audioPlayer.addEventListener('loadedmetadata', function() {
            durationElement.textContent = formatTime(audioPlayer.duration);
        });
        
        // 音频结束时重置
        audioPlayer.addEventListener('ended', function() {
            progressBar.style.width = '0%';
            currentTimeElement.textContent = '0:00';
            playButton.innerHTML = '<i class="fas fa-play"></i>';
            isPlaying = false;
        });
        
        // 上一首/下一首按钮 (演示用，实际需要连接到其他歌曲)
        prevButton.addEventListener('click', function() {
            alert('上一首功能将在完整版中实现');
        });
        
        nextButton.addEventListener('click', function() {
            alert('下一首功能将在完整版中实现');
        });
    }
    
    // 格式化时间显示
    function formatTime(seconds) {
        const minutes = Math.floor(seconds / 60);
        const secs = Math.floor(seconds % 60);
        return `${minutes}:${secs < 10 ? '0' : ''}${secs}`;
    }
    
    // 初始化三个播放器
    setupPlayer(1);
    setupPlayer(2);
    setupPlayer(3);
    function setupPlayer(playerNumber) {
    const audioPlayer = document.getElementById(`audioPlayer${playerNumber}`);
    
    // 添加错误监听
    audioPlayer.addEventListener('error', function() {
        console.error(`播放器${playerNumber}错误:`, audioPlayer.error);
        alert(`音频加载失败，请检查网络: ${audioPlayer.src}`);
    });

}
function setupPlayer(playerNumber) {
    const audioPlayer = document.getElementById(`audioPlayer${playerNumber}`);
    const playButton = document.getElementById(`playButton${playerNumber}`);
    const progressBar = document.getElementById(`progress${playerNumber}`);
    const currentTimeElement = document.getElementById(`currentTime${playerNumber}`);
    const durationElement = document.getElementById(`duration${playerNumber}`);
    
    // 播放/暂停控制
    playButton.addEventListener('click', function() {
        if (audioPlayer.paused) {
            audioPlayer.play()
                .then(() => {
                    playButton.innerHTML = '<i class="fas fa-pause"></i>';
                })
                .catch(e => {
                    console.error("播放失败:", e);
                    playButton.innerHTML = '<i class="fas fa-play"></i>';
                });
        } else {
            audioPlayer.pause();
            playButton.innerHTML = '<i class="fas fa-play"></i>';
        }
    });

    // 状态同步
    audioPlayer.addEventListener('play', () => {
        playButton.innerHTML = '<i class="fas fa-pause"></i>';
    });
    
    audioPlayer.addEventListener('pause', () => {
        playButton.innerHTML = '<i class="fas fa-play"></i>';
    });
    
    // 进度条更新
    audioPlayer.addEventListener('timeupdate', function() {
        const progressPercent = (audioPlayer.currentTime / audioPlayer.duration) * 100;
        progressBar.style.width = `${progressPercent}%`;
        currentTimeElement.textContent = formatTime(audioPlayer.currentTime);
    });
}
</script>
<script>
        // 菜单切换功能
const menuToggle = document.getElementById('menuToggle');
const navContainer = document.getElementById('navContainer');

menuToggle.addEventListener('click', function(e) {
    e.stopPropagation();
    navContainer.classList.toggle('show');
    
    // 更改按钮文本
    if (navContainer.classList.contains('show')) {
        menuToggle.textContent = '关闭';
    } else {
        menuToggle.textContent = '菜单';
    }
});

// 点击页面其他区域关闭菜单
document.addEventListener('click', function(event) {
    if (!navContainer.contains(event.target) && event.target !== menuToggle) {
        navContainer.classList.remove('show');
        menuToggle.textContent = '菜单';
    }
});

// 阻止菜单内部点击事件冒泡
navContainer.addEventListener('click', function(e) {
    e.stopPropagation();
});
    </script>
    <script>
// 获取DOM元素
const themeToggle = document.getElementById('themeToggle');
const body = document.body;

// 主题切换函数
themeToggle.addEventListener('click', () => {
    const currentTheme = body.getAttribute('data-theme');
    const newTheme = currentTheme === 'dark' ? 'light' : 'dark';
    
    body.setAttribute('data-theme', newTheme);
    localStorage.setItem('theme', newTheme);
    
    // 更新按钮图标和文字
    themeToggle.textContent = newTheme === 'dark' ? '🌓 夜间模式' : '🌞 白天模式';
    
    // 强制重绘弹窗内容
    const modal = document.getElementById('announcementModal');
    if(modal.style.display === 'flex') {
        modal.style.display = 'none';
        setTimeout(() => { modal.style.display = 'flex' }, 10);
    }
});

// 初始化主题 - 添加这部分代码
(function() {
    // 从本地存储获取主题设置，如果没有则默认为dark
    const savedTheme = localStorage.getItem('theme') || 'dark';
    body.setAttribute('data-theme', savedTheme);
    
    // 设置按钮初始文本
    themeToggle.textContent = savedTheme === 'dark' ? '🌓 夜间模式' : '🌞 白天模式';
})();
</script>
</body>
</html>