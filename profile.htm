<!DOCTYPE html>
<html lang="zh-CN">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>用户信息 - xiaoyumi官网</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f5f5f5;
            margin: 0;
            padding: 20px;
            color: #333;
        }
        .container {
            max-width: 800px;
            margin: 0 auto;
            background-color: white;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }
        h1 {
            color: #4CAF50;
            border-bottom: 2px solid #4CAF50;
            padding-bottom: 10px;
        }
        .profile-section {
            margin-bottom: 20px;
        }
        .profile-item {
            margin-bottom: 10px;
        }
        .profile-label {
            font-weight: bold;
            display: inline-block;
            width: 120px;
        }
        .error {
            color: #f44336;
            font-weight: bold;
        }
        .loading {
            text-align: center;
            padding: 20px;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>用户信息</h1>
        <div id="profileContent">
            <div class="loading">加载中...</div>
        </div>
    </div>

    <script>
        // 获取Cookie值的函数
        function getCookie(name) {
            const cookies = document.cookie.split(';');
            for (let cookie of cookies) {
                const [cookieName, cookieValue] = cookie.trim().split('=');
                if (cookieName === name) {
                    return decodeURIComponent(cookieValue);
                }
            }
            return null;
        }

        // 解析user_profile.txt内容
        function parseProfileData(text) {
            try {
                // 简单解析文本格式
                const userBlock = text.match(/user\{([^}]+)\}/);
                if (!userBlock) return null;
                
                const lines = userBlock[1].split('\n').filter(line => line.trim());
                const profile = {};
                
                lines.forEach(line => {
                    const [key, value] = line.split(':').map(item => item.trim());
                    if (key && value) profile[key] = value;
                });
                
                return profile;
            } catch (e) {
                console.error('解析用户数据失败:', e);
                return null;
            }
        }

        // 显示用户信息
        function displayProfile(profileData) {
            const profileContent = document.getElementById('profileContent');
            
            if (!profileData) {
                profileContent.innerHTML = '<div class="error">无法加载用户数据</div>';
                return;
            }
            
            let html = `
                <div class="profile-section">
                    <h2>基本信息</h2>
                    <div class="profile-item">
                        <span class="profile-label">用户名:</span>
                        <span>${profileData.username || '未设置'}</span>
                    </div>
                </div>
                <div class="profile-section">
                    <h2>订单信息</h2>
                    <div class="profile-item">
                        <span class="profile-label">我的订单:</span>
                        <span>${profileData.buy || '无订单记录'}</span>
                    </div>
                </div>
                <div class="profile-section">
                    <h2>安全设置</h2>
                    <div class="profile-item">
                        <span class="profile-label">安全选项:</span>
                        <span>${profileData.aq || '未设置安全选项'}</span>
                    </div>
                </div>
            `;
            
            profileContent.innerHTML = html;
        }

        // 显示错误信息
        function displayError(message) {
            const profileContent = document.getElementById('profileContent');
            profileContent.innerHTML = `<div class="error">${message}</div>`;
        }

        // 主逻辑
        document.addEventListener('DOMContentLoaded', async function() {
            // 1. 检查登录状态
            const username = getCookie('username');
            const isLoggedIn = getCookie('isLoggedIn') === 'true';
            
            if (!isLoggedIn || !username) {
                displayError('请先登录系统');
                return;
            }
            
            // 2. 获取用户数据文件
            try {
                const response = await fetch('https://xiaoyumi9243.github.io/user_profile.txt?t=' + Date.now());
                if (!response.ok) throw new Error('无法加载用户数据');
                
                const text = await response.text();
                const profileData = parseProfileData(text);
                
                // 3. 验证用户名是否匹配
                if (!profileData || profileData.username !== username) {
                displayError('用户信息不匹配或不存在');
                    return;
                }
                
                // 4. 显示用户信息
                displayProfile(profileData);
                
            } catch (error) {
                console.error('加载用户数据失败:', error);
                displayError('加载用户数据时出错: ' + error.message);
            }
        });
    </script>
</body>
</html>