<!DOCTYPE html>
<html lang="zh-CN">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>GitHub 论坛浏览器</title>
    <style>
        :root {
            --primary-color: #2c3e50;
            --secondary-color: #3498db;
            --text-color: #333;
        }
        body {
            font-family: 'Segoe UI', Arial, sans-serif;
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
            background-color: #f8f9fa;
        }
        .container {
            background: white;
            border-radius: 12px;
            box-shadow: 0 4px 6px rgba(0,0,0,0.1);
            padding: 30px;
            margin-top: 20px;
        }
        .post {
            border-bottom: 1px solid #eee;
            padding: 25px 0;
            transition: transform 0.2s;
        }
        .post:hover {
            transform: translateX(10px);
        }
        .post-header {
            display: flex;
            align-items: center;
            margin-bottom: 15px;
        }
        .user-icon {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            background: var(--secondary-color);
            color: white;
            display: flex;
            align-items: center;
            justify-content: center;
            margin-right: 15px;
        }
        .post-meta {
            flex-grow: 1;
        }
        .post-author {
            font-weight: 600;
            color: var(--primary-color);
            margin-bottom: 3px;
        }
        .post-date {
            color: #95a5a6;
            font-size: 0.9em;
        }
        .post-title {
            font-size: 1.4em;
            color: var(--primary-color);
            margin: 10px 0;
        }
        .post-content {
            color: var(--text-color);
            line-height: 1.7;
            margin: 15px 0;
            white-space: pre-wrap;
        }
        .post-image-container {
            margin-top: 20px;
            border-radius: 8px;
            overflow: hidden;
            position: relative;
            background: #f4f4f4;
        }
        .post-image {
            width: 100%;
            height: auto;
            max-height: 400px;
            object-fit: cover;
            transition: transform 0.3s;
        }
        .post-image:hover {
            transform: scale(1.02);
        }
        .no-image {
            text-align: center;
            padding: 20px;
            color: #95a5a6;
            border: 2px dashed #ecf0f1;
            border-radius: 8px;
        }
        .loading {
            text-align: center;
            padding: 30px;
            color: #7f8c8d;
        }
        .error {
            color: #e74c3c;
            padding: 15px;
            background: #fdedec;
            border-radius: 8px;
            margin: 20px 0;
        }
        .refresh-btn {
            background: var(--secondary-color);
            color: white;
            padding: 12px 25px;
            border: none;
            border-radius: 25px;
            cursor: pointer;
            font-weight: 600;
            transition: all 0.3s;
            display: flex;
            align-items: center;
            gap: 8px;
            margin: 0 auto;
        }
        .refresh-btn:hover {
            background: #2980b9;
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(52,152,219,0.3);
        }
    </style>
</head>
<body>
    <div class="container">
        <h1 style="text-align: center; color: var(--primary-color); margin-bottom: 30px;">
            📚 GitHub 论坛浏览器
        </h1>
        
        <button class="refresh-btn" onclick="loadData()">
            🔄 刷新数据
        </button>

        <div id="loading" class="loading">
            <p>⏳ 正在加载最新帖子...</p>
        </div>
        
        <div id="error" class="error"></div>
        
        <div id="posts-container"></div>
    </div>

    <script>
        // 配置信息（修改为您的GitHub信息）
        const CONFIG = {
            repoUrl: 'https://xiaoyumi9243.github.io/你的仓库名/bbs.txt',
            cacheBust: true
        };

        // 增强版数据解析
        function parseBBSData(text) {
            return text.split(/(?=\n?{)/g) // 更准确的分割正则
                .filter(block => block.trim())
                .map(block => {
                    try {
                        const post = {};
                        block.replace(/^{|}$/g, '')
                            .split('\n')
                            .filter(line => line.trim())
                            .forEach(line => {
                                const [key, ...valueParts] = line.split(':[');
                                const value = valueParts.join(':[').replace(/\]$/, '').trim();
                                if (key && value) post[key.trim()] = value;
                            });
                        
                        // 数据验证和格式化
                        return {
               author: post.name || '匿名用户',
                            title: post.little || '无标题',
                            content: post.text || '无内容',
                            photo: post.photo === 'Done' ? null : post.photo,
                            date: new Date().toLocaleString('zh-CN', { 
                                year: 'numeric', 
                                month: '2-digit', 
                                day: '2-digit',
                                hour: '2-digit',
                                minute: '2-digit'
                            })
                        };
                    } catch (e) {
                        console.warn('解析失败:', e);
                        return null;
                    }
                })
                .filter(Boolean);
        }

        // 渲染帖子内容
        function renderPosts(posts) {
            const container = document.getElementById('posts-container');
            
            if (!posts.length) {
                container.innerHTML = `<div class="no-image">📭 暂时没有帖子</div>`;
                return;
            }

            container.innerHTML = posts.map(post => `
                <div class="post">
                    <div class="post-header">
                        <div class="user-icon">${post.author[0]}</div>
                        <div class="post-meta">
                            <div class="post-author">${post.author}</div>
                            <div class="post-date">📅 ${post.date}</div>
                        </div>
                    </div>
                    <h3 class="post-title">${post.title}</h3>
                    <div class="post-content">${post.content}</div>
                    ${post.photo ? `
                    <div class="post-image-container">
                        <img src="${post.photo}" 
                             class="post-image" 
                             alt="帖子配图"
                             loading="lazy"
                             onerror="this.style.display='none'">
                    </div>` : 
                    `<div class="no-image">📷 无图片附件</div>`}
                </div>
            `).join('');
        }

        // 数据加载逻辑
        async function loadData() {
            const loading = document.getElementById('loading');
            const error = document.getElementById('error');
            const url = CONFIG.cacheBust ? 
                `${CONFIG.repoUrl}?t=${Date.now()}` : 
                CONFIG.repoUrl;

            try {
                loading.style.display = 'block';
                error.textContent = '';
                
                const response = await fetch(url);
                if (!response.ok) throw new Error(`HTTP错误 ${response.status}`);
                
                const data = await response.text();
                const posts = parseBBSData(data);
                renderPosts(posts);
                
            } catch (err) {
                error.textContent = `❌ 加载失败: ${err.message}`;
                console.error('Error:', err);
            } finally {
                loading.style.display = 'none';
            }
        }

        // 初始加载
        window.addEventListener('DOMContentLoaded', loadData);
    </script>
</body>
</html>