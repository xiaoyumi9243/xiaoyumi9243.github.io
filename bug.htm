<!DOCTYPE html>
<html lang="zh-CN">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Bug反馈</title>
    <style>
        * {
            box-sizing: border-box;
            margin: 0;
            padding: 0;
            font-family: 'Arial', sans-serif;
        }
        
        body {
            background-color: #f5f5f5;
            color: #333;
            line-height: 1.6;
        }
        
        header {
            background-color: #2c3e50;
            color: white;
            padding: 2rem 0;
            text-align: center;
        }
        
        .container {
            max-width: 800px;
            margin: 2rem auto;
            padding: 0 20px;
        }
        
        .card {
            background: white;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            padding: 2rem;
            margin-bottom: 2rem;
        }
        
        h1 {
            margin-bottom: 1rem;
        }
        
        h2 {
            color: #2c3e50;
            margin-bottom: 1.5rem;
            border-bottom: 2px solid #eee;
            padding-bottom: 0.5rem;
        }
        
        .form-group {
            margin-bottom: 1.5rem;
        }
        
        label {
            display: block;
            margin-bottom: 0.5rem;
            font-weight: bold;
        }
        
        input[type="text"],
        input[type="email"],
        select,
        textarea {
            width: 100%;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
            font-size: 16px;
        }
        
        textarea {
            min-height: 150px;
            resize: vertical;
        }
        
        .btn {
            background-color: #3498db;
            color: white;
            border: none;
            padding: 12px 24px;
            border-radius: 4px;
            cursor: pointer;
            font-size: 16px;
            transition: background-color 0.3s;
        }
        
        .btn:hover {
            background-color: #2980b9;
        }
        
        .bug-list {
            list-style: none;
        }
        
        .bug-item {
            padding: 1.5rem;
            border-bottom: 1px solid #eee;
        }
        
        .bug-item:last-child {
            border-bottom: none;
        }
        
        .bug-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            cursor: pointer;
        }
        
        .bug-title {
            font-weight: bold;
            font-size: 1.2rem;
            color: #2c3e50;
            margin-bottom: 0.5rem;
        }
        
        .bug-meta {
            font-size: 0.9rem;
            color: #7f8c8d;
            margin-bottom: 0.5rem;
        }
        
        .bug-desc {
            margin-top: 0.5rem;
            display: none;
            padding-top: 10px;
            border-top: 1px dashed #eee;
        }
        
        .bug-desc.expanded {
            display: block;
        }
        
        .severity-high {
            color: #e74c3c;
        }
        
        .severity-medium {
            color: #f39c12;
        }
        
        .severity-low {
            color: #2ecc71;
        }
        
        .toggle-btn {
            background: none;
            border: none;
            color: #3498db;
            cursor: pointer;
            font-size: 0.9rem;
            padding: 5px;
        }
        
        .toggle-btn:focus {
            outline: none;
        }
        
        footer {
            text-align: center;
            padding: 2rem 0;
            background-color: #2c3e50;
            color: white;
        }
        
        .success-message {
            background-color: #2ecc71;
            color: white;
            padding: 1rem;
            border-radius: 4px;
            margin-bottom: 1.5rem;
            display: none;
        }
        
        .clear-btn {
            background-color: #e74c3c;
            margin-left: 10px;
        }
        
        .clear-btn:hover {
            background-color: #c0392b;
        }
    </style>
</head>
<body>
    <header>
        <h1>Bug反馈</h1>
        <p>帮助我们改进</p>
    </header>
    
    <div class="container">
        <div id="success-message" class="success-message">
            感谢您的反馈！我们已收到您提交的Bug报告。
        </div>
        
        <div class="card">
            <h2>提交新Bug</h2>
            <form id="bug-form">
                <div class="form-group">
                    <label for="title">Bug标题*</label>
                    <input type="text" id="title" name="title" required placeholder="简要描述问题">
                </div>
                
                <div class="form-group">
                    <label for="description">详细描述*</label>
                    <textarea id="description" name="description" required placeholder="请详细描述您遇到的问题，包括重现步骤..."></textarea>
                </div>
                
                <div class="form-group">
                    <label for="severity">严重程度*</label>
                    <select id="severity" name="severity" required>
                        <option value="">请选择严重程度</option>
                        <option value="high">高 - 导致系统崩溃或数据丢失</option>
                        <option value="medium">中 - 影响主要功能使用</option>
                        <option value="low">低 - 轻微问题或不影响使用</option>
                    </select>
                </div>
                
                <div class="form-group">
                    <label for="email">您的邮箱</label>
                    <input type="email" id="email" name="email" placeholder="可选，方便我们联系您">
                </div>
                
                <div class="form-group">
                    <label for="browser">浏览器类型</label>
                    <input type="text" id="browser" name="browser" placeholder="如：Chrome 102, Firefox 100">
                </div>
                
                <div class="form-group">
                    <label for="os">操作系统</label>
                    <input type="text" id="os" name="os" placeholder="如：Windows 11, macOS 12">
                </div>
                
                <button type="submit" class="btn">提交Bug报告</button>
                <button type="button" id="clear-all" class="btn clear-btn">清空所有Bug</button>
            </form>
        </div>
        
        <div class="card">
            <h2>已提交的Bug <span id="bug-count">(0)</span></h2>
            <ul class="bug-list" id="bug-list">
                <!-- Bug列表将通过JavaScript动态生成 -->
            </ul>
        </div>
    </div>
    
    <footer>
        <p>bug反馈页面待升级，如有问题可在此页面提交</p>
    </footer>

    <script>
        // Cookie操作函数
        function setCookie(name, value, days) {
            let expires = "";
            if (days) {
                const date = new Date();
                date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));
                expires = "; expires=" + date.toUTCString();
            }
            document.cookie = name + "=" + (JSON.stringify(value) || "") + expires + "; path=/";
        }
        
        function getCookie(name) {
            const nameEQ = name + "=";
            const ca = document.cookie.split(';');
            for (let i = 0; i < ca.length; i++) {
                let c = ca[i];
                while (c.charAt(0) === ' ') c = c.substring(1, c.length);
                if (c.indexOf(nameEQ) === 0) {
                    const cookieValue = c.substring(nameEQ.length, c.length);
                    try {
                        return JSON.parse(cookieValue);
                    } catch (e) {
                        return cookieValue;
                    }
                }
            }
            return null;
        }
        
        function eraseCookie(name) {
            document.cookie = name + '=; Path=/; Expires=Thu, 01 Jan 1970 00:00:01 GMT;';
        }
        
        // Bug数据管理
        const COOKIE_NAME = "bugReports";
        
        function saveBugsToCookie(bugs) {
            setCookie(COOKIE_NAME, bugs, 30); // 保存30天
            updateBugCount();
        }
        
        function getBugsFromCookie() {
            return getCookie(COOKIE_NAME) || [];
        }
        
        function clearAllBugs() {
            if (confirm("确定要清空所有Bug报告吗？此操作不可撤销！")) {
                eraseCookie(COOKIE_NAME);
                document.getElementById('bug-list').innerHTML = '';
                updateBugCount();
            }
        }
        
        function updateBugCount() {
            const bugs = getBugsFromCookie();
            document.getElementById('bug-count').textContent = `(${bugs.length})`;
        }
        
        // 表单提交处理
        document.getElementById('bug-form').addEventListener('submit', function(e) {
            e.preventDefault();
            
            // 获取表单数据
            const formData = {
                title: document.getElementById('title').value,
                description: document.getElementById('description').value,
                severity: document.getElementById('severity').value,
 description: document.getElementById('description').value,
                severity: document.getElementById('severity').value,
                email: document.getElementById('email').value,
                browser: document.getElementById('browser').value,
                os: document.getElementById('os').value,
                date: new Date().toISOString().split('T')[0],
                id: Date.now() // 添加唯一ID
            };
            
            // 获取现有Bug并添加新Bug
            const existingBugs = getBugsFromCookie();
            existingBugs.unshift(formData); // 添加到开头
            saveBugsToCookie(existingBugs);
            
            // 重新加载Bug列表
            loadBugs();
            
            // 显示成功消息
            document.getElementById('success-message').style.display = 'block';
            
            // 重置表单
            this.reset();
            
            // 3秒后隐藏成功消息
            setTimeout(() => {
                document.getElementById('success-message').style.display = 'none';
            }, 3000);
        });
        
        // 清空按钮事件
        document.getElementById('clear-all').addEventListener('click', clearAllBugs);
        
        // 添加Bug到列表
        function addBugToList(bug) {
            const bugList = document.getElementById('bug-list');
            const severityText = {
                'high': '高优先级',
                'medium': '中优先级',
                'low': '低优先级'
            };
            
            const severityClass = {
                'high': 'severity-high',
                'medium': 'severity-medium',
                'low': 'severity-low'
            };
            
            const bugItem = document.createElement('li');
            bugItem.className = 'bug-item';
            bugItem.dataset.id = bug.id;
            bugItem.innerHTML = `
                <div class="bug-header">
                    <div>
                        <div class="bug-title">${bug.title}</div>
                        <div class="bug-meta">
                            <span class="${severityClass[bug.severity]}">${severityText[bug.severity]}</span> | 
                            提交于 ${bug.date} | 
                            提交者: ${bug.email || '匿名'}
                        </div>
                    </div>
                    <button class="toggle-btn">展开详情</button>
                </div>
                <div class="bug-desc">${bug.description.replace(/\n/g, '<br>')}</div>
            `;
            
            // 添加到列表
            bugList.appendChild(bugItem);
            
            // 为Bug项添加点击事件
            addToggleEvent(bugItem);
        }
        
        // 为Bug项添加展开/收起功能
        function addToggleEvent(bugItem) {
            const toggleBtn = bugItem.querySelector('.toggle-btn');
            const bugDesc = bugItem.querySelector('.bug-desc');
            
            toggleBtn.addEventListener('click', function() {
                bugDesc.classList.toggle('expanded');
                toggleBtn.textContent = bugDesc.classList.contains('expanded') ? '收起详情' : '展开详情';
            });
        }
        
        // 加载所有Bug到列表
        function loadBugs() {
            const bugList = document.getElementById('bug-list');
            bugList.innerHTML = '';
            
            const bugs = getBugsFromCookie();
            bugs.forEach(bug => addBugToList(bug));
            
            updateBugCount();
        }
        
        // 页面加载时从Cookie加载Bug列表
        window.addEventListener('DOMContentLoaded', loadBugs);
    </script>
</body>
</html>